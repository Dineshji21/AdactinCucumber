package selenium;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.support.ui.Select;

import io.github.bonigarcia.wdm.WebDriverManager;

public class BaseClass {

	public static WebDriver driver;
	public static  void browserlaunch(String type ) {
		if (type.equalsIgnoreCase("chrome")) {
			WebDriverManager.chromedriver().setup();
			driver =new ChromeDriver();

		}
		else if (type.equalsIgnoreCase("firefox")) {
			WebDriverManager.firefoxdriver().setup();
			driver=new FirefoxDriver();
		}
		else if (type.equalsIgnoreCase("edge")) {
			WebDriverManager.edgedriver().setup();
			driver=new EdgeDriver();

		}
		else if (type.equalsIgnoreCase("internet")) {
			WebDriverManager.iedriver().setup();
			driver=new InternetExplorerDriver();


		}
		driver.manage().window().maximize();

	}

	public static WebDriver geturl(String url) {
		driver.get(url);
		return driver;
	}

	public static void sendinputvalue(WebElement element,String value) {
		element.sendKeys(value);

	}
	public static  void clickonelement(WebElement element) {
		element.click();
	}

	public static WebDriver close() {
		driver.close();
		return driver;

	}
	public static  WebDriver quit() {
		driver.quit();
		return driver;

	}
	public static  void dropdown(WebElement element,String type,String value) {
		Select s=new Select(element);
		if (type.equalsIgnoreCase("SelectByValue")) {
			s.selectByValue(value);
		}
		else if (type.equalsIgnoreCase("SelectByIndex")) {
			int index = Integer.parseInt(value);
			s.selectByIndex(index);
		}
		else if (type.equalsIgnoreCase("SelectByVisibleText")) {
			s.selectByVisibleText(value);

		}
}
	public static  void readdata(String path,int SelectIndex,int RowNum,int cellNum) throws IOException {
		
	File f =new File(path);
	FileInputStream fis = new  FileInputStream(f);
	Workbook wb = new XSSFWorkbook(fis);
	Sheet sheetAt = wb.getSheetAt(SelectIndex);
	Row row = sheetAt.getRow(RowNum);
	Cell cell = row.getCell(cellNum);
	CellType celltype  = cell.getCellType();
	
	if (celltype.equals(.celltype)) {
		String stringCellValue = cell.getStringCellValue();
	}

	}




	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
